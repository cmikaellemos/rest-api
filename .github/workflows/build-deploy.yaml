name: Build & Deploy
on:
  release:
    types: [published]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Login to Registry
        run: docker login docker.pkg.github.com -u ${GITHUB_ACTOR} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Build image
        env:
          IMAGE_NAME: rest-api
        run: |
          export IMAGE_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/tags\/v//g")
          docker build -t docker.pkg.github.com/${GITHUB_REPOSITORY}/${IMAGE_NAME}:${IMAGE_TAG} .

      - name: Publish image
        env:
          IMAGE_NAME: rest-api
        run: docker push docker.pkg.github.com/${GITHUB_REPOSITORY}/${IMAGE_NAME}

      - name: Logout
        run: docker logout docker.pkg.github.com

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Set up config
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p ${HOME}/.kube
          export KUBECONFIG=${HOME}/.kube/config
          echo $KUBE_CONFIG | base64 -d > $KUBECONFIG

      - name: Deploy image
        env:
          DEPLOYMENT: rest-api
          CONTAINER: rest-api
          IMAGE_NAME: rest-api
        run: |
          export IMAGE_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/tags\/v//g")
          kubectl set image deployment/${DEPLOYMENT} ${CONTAINER}=docker.pkg.github.com/${GITHUB_REPOSITORY}/${IMAGE_NAME}:${IMAGE_TAG}
          kubectl rollout status deployment/${DEPLOYMENT} -w --timeout=3m

      - name: Roll back
        if: failure()
        env:
          DEPLOYMENT: rest-api
        run: kubectl rollout undo deployment/${DEPLOYMENT}
